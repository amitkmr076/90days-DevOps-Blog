1.Explain in your own words and examples, what is Shell Scripting for DevOps?

Shell Scripting for DevOps is a scripting language used to automate tasks and processes in a DevOps environment.
These scripts can be used to deploy applications, manage servers, install software, and perform other operations. 
Examples of shell scripts include installing a web server, automating database backups, and setting up a continuous integration pipeline. 
Shell scripts help DevOps engineers streamline their workflows and save time on repetitive tasks.


2.What is #!/bin/bash?

#!/bin/bash is a shebang. It is a special type of comment that tells the operating system which interpreter to use when executing a script. 
It is often used at the beginning of a Bash script to indicate that the script should be run with the Bash interpreter.


3.can we write #!/bin/sh as well?



Yes, you can write #!/bin/sh as well. This is known as a shebang line and it is used to tell the operating system which program should 
be used to execute the script. The #!/bin/sh shebang line is used to tell the system to use the Bourne shell (sh) to interpret the script.



4.Write a Shell Script which prints I will complete #90DaysOofDevOps challenge. 


Open the terminal and type the following command

$ nano 90DaysOfDevOps.sh

Then write the following script

#!/bin/bash -shebang

echo "I will complete #90DaysOfDevOps challenge."

Save the file by pressing Ctrl+X and press Y to save the changes.

Run the shell script by typing the following command

$ ./90DaysOfDevOps.sh



5.Write an Example of If else in Shell Scripting by comparing 2 numbers


1. The first line of the script is the shebang (#!) which tells the computer which interpreter to use to execute the script. In this case, it is "/bin/bash".

2. The next two lines set two variables, a and b, to the values of 100 and 2000 respectively.

3. The if statement checks if the value of the variable a is greater than the value of the variable b. If it is, then the statement "A is biggest" is printed.

4. The elif statement checks if the value of the variable b is greater than the value of the variable a. If it is, then the statement "B is biggest" is printed.

5. The script ends after the if and elif statements.

6. Then, Press ctrl+x to exit and press Y  to save the progress and press ENTER.

7. Then run the shell script in the Terminal to see the result


6.Write a Shell Script to take user input, input from arguments and print the variables.


1. This shell script will first print out a message saying "What is your name?"
2. It will then prompt the user to enter their name and store it in a variable named "name".
3. Next, it will print out a message saying "My name is [name]"
4. Finally, it will print out a message saying "Nice to meet you, [name]"
5. while running the file in the terminal you must first proceed by typing argumment along with the file name. example - ./test.sh 
      argument.
   Here, the argument is my name Amit


  Thank you so much for taking the time to read my blog! Your support means the world to me and I'm so grateful for it.


